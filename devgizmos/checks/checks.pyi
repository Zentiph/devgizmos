# pylint: disable=all

from typing import Any, Dict, Iterable, Sequence, Sized, Type

def verify_types(v: Any, /, *types: Type, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_values(v: Any, /, *values: Any, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_in_range(v: Any, seq: Sequence, start: int = -1, end: int = -1, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_not_none(v: Any, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_length(v: Sized, min_length: int, max_length: int = -1, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_regex(s: str, regex: str, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_key_in_dict(d: Dict[Any, Any], key: Any, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_contains(iterable: Iterable, item: Any, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_subclass(subclass: Type, superclass: Type, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
def verify_callable(v: Any, *, raise_exc: bool = True, exc_msg: str = "") -> bool: ...
