plans for devgizmos

1. more decorators
	- (MAYBE) Circuit Breaker: Prevents a function from being called repeatedly if it keeps failing.
	- (MAYBE) Data Validation: Validates the input data before allowing the function to execute.
	- (MAYBE) Throttling: Ensures that a function is called at most once in a specified time period.
	- (MAYBE) Logging: General logging of function calls and parameters, similar to error_logger but for all calls, not just errors.
2. interp stuff
3. arithmetic package
	- need to check if already in math module
	- sum (over args, or an iterable)
	- product (over args, or an iterable)
	- ...
4. add type verifying to checks.py
5. lightweight version of the package (probably not any time soon)
6. add support for self arg when class methods are decorated (print self or nothing instead of cls.__repr__())
7. types module for custom types