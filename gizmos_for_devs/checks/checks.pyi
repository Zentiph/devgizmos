# pylint: disable=all

from typing import Any, Dict, Iterable, Sequence, Sized, Type


def verify_types(value: Any, /, *types: Type, err_msg: str = "") -> None: ...

def verify_values(value: Any, /, *values: Any, err_msg: str = "") -> None: ...

def verify_in_range(value: Any, sequence: Sequence, start_index: int = -1, end_index: int = -1,
                    *, err_msg: str = "") -> None: ...

def verify_not_none(value: Any, *, err_msg: str = "") -> None: ...

def verify_length(value: Sized, min_length: int, max_length: int, *, err_msg: str = "") -> None: ...

def verify_not_empty(value: Sized, *, err_msg: str = "") -> None: ...

def verify_regex(value: str, regex: str, *, err_msg: str = "") -> None: ...


def verify_key_in_dict(d: Dict[Any, Any], key: Any, *, err_msg: str = "") -> None: ...


def verify_contains(iterable: Iterable, item: Any, *, err_msg: str = "") -> None: ...


def verify_subclass(subclass: Type, superclass: Type, *, err_msg: str = "") -> None: ...


def verify_callable(value: Any, *, err_msg: str = "") -> None: ...
